#!/bin/bash

# starts a timelapse process in the background

# first parameter has to be start or stop
# the following parameter will be appended to the raspistill command

function help {
  SCRIPT=${0##*/}
  echo
  if [ ! -z "$PID" ]; then
    echo "     raspistill is running"
    echo "     PID: $PID"
    echo "     output to $(cat ~/tmp/timelapse.dir)"
    echo
    echo "     type '$SCRIPT stop' to end timelapse recording"
  else
    echo "     raspistill is not running"
    echo
    echo "     type '$SCRIPT start' to begin timelapse"
  fi
  exit
}

CMD=$1
shift
PID=$(pgrep raspistill)
if [ "$CMD" = "start" ] || [ "$CMD" = "stop" ]
then

  case "$CMD" in
    stop)

      if [ -z "$PID" ]
      then
        echo raspistill is not running
      else
        kill $PID
        echo we stopped raspistill with pid: $PID
        echo
        echo "go to $(cat ~/tmp/timelapse.dir) for the output"
      fi
      ;;

    start)
      if [ ! -z "$PID" ]
      then
        echo "found running raspistill, pid $PID"
      else
        DIR=~/timelapse/`date +%Y%m%d-%H%M`
	mkdir -p ~/tmp
        echo $DIR > ~/tmp/timelapse.dir
        FOTOS=~/pictures
        mkdir -p $DIR
        raspistill -w 1920 -h 1080 -tl 5000 --thumb none -ex auto -n -t 0 -l $FOTOS/last.jpg -o $DIR/tl%06d.jpg $* &
        # raspistill -w 2592 -h 1096 --thumb none -tl 5000 -n -t 0 -l $FOTOS/last.jpg -o $DIR/tl%06d.jpg $* &
        echo raspistill started
        echo stop with: timelapse stop
        echo output directory: $DIR
      fi
      ;;

    *)
      SCRIPTNAME=${0##*/}
      echo "$SCRIPTNAME start|stop"

      ;;
  esac

else
  help
fi

