#!/bin/bash

# starts a timelapse process in the background

# first parameter has to be start or stop
# the following parameter will be appended to the libcamera-still command

function help {
  SCRIPT=${0##*/}
  echo
  if [ ! -z "$PID" ]; then
    echo "     libcamera-still is running on host $(hostname)"
    echo "     PID: $PID"
    echo "     output to $(cat ~/tmp/timelapse.dir)"
    echo
    echo "     type '$SCRIPT stop' to end timelapse recording"
  else
	  echo "     libcamera-still is not running on host $(hostname)"
    echo
    echo "     type '$SCRIPT start' to begin timelapse"
  fi
  exit
}

# check if the nfs mount is available
function mounted () {
	MAXTRIES=10
	COUNTER=0
	until mountpoint /nfs
	do
		/bin/sleep 5
		COUNTER=$((COUNTER+1))
		if [ $COUNTER -gt 10 ]; then
			echo "/nfs is not a mountpoint, exiting ..."
			exit 1
		fi
	done

}

# default parameter
EX=night
TL=60000
WIDTH=1920
HEIGHT=1080
FLIP=
OUTPUTDIR=~/timelapse

while getopts ":nut:w:h:d:" opt; do
  case $opt in
    d)
      echo OUTPUTDIR $OPTARG
      OUTPUTDIR=$OPTARG
      ;;
    n)
      echo "night start"
      EX="night"
      ;;
    t)
      echo "interval $OPTARG"
      TL=$OPTARG
      ;;
    w)
      echo "width $OPTARG"
      WIDTH=$OPTARG
      ;;
    h)
      echo "height $OPTARG"
      HEIGHT=$OPTARG
      ;;
    u)
      echo "upside down mode"
      FLIP="-vf -hf"
      ;;
    \?)
      echo "invalid option: -$OPTARG"
      ;;
  esac
done
shift $((OPTIND-1))

CMD=$1
shift

echo libcamera-still --width $WIDTH --height $HEIGHT -ex $EX --timelapse $TL $CMD


PID=$(pgrep libcamera-still)
if [ "$CMD" = "start" ] || [ "$CMD" = "stop" ]
then

  case "$CMD" in
    stop)

      if [ -z "$PID" ]
      then
        echo libcamera-still is not running
      else
        kill $PID
        echo we stopped libcamera-still with pid: $PID
        echo
        echo "go to $(cat ~/tmp/timelapse.dir) for the output"
      fi
      ;;

    start)
      if [ ! -z "$PID" ]
      then
        echo "found running libcamera-still, pid $PID"
      else
	mounted "~/timelapse"
        DAYDIR=$OUTPUTDIR/`date +%Y%m%d`
        mkdir -p $DAYDIR
        DIR=$DAYDIR/`date +%Y%m%d-%H%M`
        mkdir -p ~/tmp
        echo $DAYDIR > ~/tmp/timelapse.dir
        FOTOS=~/pictures
        mkdir -p $DIR
	set -x
        libcamera-still --verbose 0 --width $WIDTH --height $HEIGHT --timelapse $TL $FLIP -n -t 0 --latest $FOTOS/last.jpg --output $DIR/tl%06d.jpg $* &
	ln -s ~steffenr/www/jq-galerie/galerie.html $DIR
	set +x
        echo libcamera-still started
        echo stop with: timelapse stop
        echo output directory: $DIR
      fi
      ;;

    *)
      SCRIPTNAME=${0##*/}
      echo "$SCRIPTNAME start|stop"

      ;;
  esac

else
  help
fi

